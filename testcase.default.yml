- target: a-01
  testcase:
    - expect: |
        A(65)
        B(66)
        C(67)
        D(68)
        E(69)
        F(70)
        G(71)
        H(72)
        I(73)
        J(74)
        K(75)
        L(76)
        M(77)
        N(78)
        O(79)
        P(80)
        Q(81)
        R(82)
        S(83)
        T(84)
        U(85)
        V(86)
        W(87)
        X(88)
        Y(89)
        Z(90)
- target: a-02
  testcase:
    - input: |
        123
        100
        43
      expect: |
        {
        ---
        d
        ---
        +
        ---
- target: a-03
  testcase:
    - expect: |
        f[0]: 0.000000
        f[1]: 0.000000
        f[2]: 0.000000
        f[3]: 0.000000
        f[4]: 0.000000
        f[5]: 0.000000
        f[6]: 0.000000
        f[7]: 0.000000
        f[8]: 0.000000
        f[9]: 0.000000
- target: a-04
  testcase:
    - input: AsDertYUio
      expect: "count : 3"
- target: a-05
  testcase:
    - expect: |
        11 12 13 14
        15 16 17 18
        19 20 21 22

- target: b-01
  testcase:
    - expect: "!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~"
- target: b-02
  testcase:
    - input: |
        1 2 3 4 5 6 7 8 9
        9 8 7 6 5 4 3
        2 1
      expect: |
        a
        1 2 3
        4 5 6
        7 8 9
        b
        9 8 7
        6 5 4
        3 2 1
        a + b
        10 10 10
        10 10 10
        10 10 10
- target: b-03
  testcase:
    - input: abcd0123ef01gh23
      expect: Zero in 4 10
- target: b-04
  testcase:
    - input: |
        a c
        12
      expect: |
        97
        32
        99
        49
        50
- target: c-01
  testcase:
    - input: |
        heLLo WoRLD.i'm student. Programming TANOSHII!!
        c is programming language.
      expect: |
        Hello World.I'm Student. Programming Tanoshii!!
        C Is Programming Language.
    - input: |
        !!!!
      expect: |
        !!!!
      label: should pass through symbols.
- target: c-02
  testcase:
    - input: "abcbc\n"
      expect: |
        place[0] : A
        place[1] : B
        place[2] : A
        place[3] : A
        place[4] : C
        place[5] : C
    - input: "bcd\n"
      expect: |
        place[0] : A
        place[1] : C
        place[2] : C
      label: should exit for unexpeced input.
    - input: "abcbc"
      expect: |
        place[0] : A
        place[1] : B
        place[2] : A
        place[3] : A
        place[4] : C
        place[5] : C
    - input: "bcd"
      expect: |
        place[0] : A
        place[1] : C
        place[2] : C
      label: should exit for unexpeced input.
    - input: |
        a
        b
        c

        b
      expect: |
        place[0] : A
        place[1] : B
        place[2] : A
        place[3] : A
        place[4] : C
      label: should ignore LF.

- target: d-01
  testcase:
    - input: "2 3 +\n"
      expect: |
        Result: 5
        ---
    - input: "5 20 3 * +\n"
      expect: |
        Result: 65
        ---
    - input: "1 15 + 23 3 - *\n"
      expect: |
        Result: 320
        ---
    - input: |
        2 3 +
        4 7 -
      expect: |
        Result: 5
        ---
        Result: -3
        ---
      label: should accept multi-input.
    - input: "5     20    3  *      +\n"
      expect: |
        Result: 65
        ---
      label: should ignore spaces.
